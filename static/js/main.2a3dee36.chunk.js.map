{"version":3,"sources":["BuildChart.js","GenNonDuplicateID.js","ListGenerate.js","Addtable.js","reportWebVitals.js","index.js"],"names":["profitData","BuildChart","_ref","profitYearData","_useState","useState","_useState2","Object","slicedToArray","chartState","setChartState","chartBTN","console","log","i","bar","parseInt","react_default","a","createElement","className","data-year","concat","style","height","background","bottom","listDataToBar","onClick","GenNonDuplicateID","Math","random","toString","substring","ListGenerate","del","listData","listItemsNum","listAll","setListAll","tdList","useEffect","_loop","profitColor","key","flex","itemData","color","updateTable","year","month","Addtable","submittingStatus","useRef","_fetchData","asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","json","setListData","stop","apply","this","arguments","_uploadData","_callee2","_context2","method","headers","Content-type","body","JSON","stringify","fetchData","current","uploadData","_useState3","_useState4","inputItem","setInputItem","handleClick","income","window","prompt","cost","profit","isNaN","alert","push","sortForYear","left","right","j","start","end","t","sortForMonth","_ref2","onChange","e","target","value","selectYear","selectMonth","type","onInput","length","handleInput","src_ListGenerate","id","filter","item","src_BuildChart","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Addtable"],"mappings":"8OAEIA,SAAa,IA8CFC,MA7Cf,SAAAC,GAAwC,IAAlBC,EAAkBD,EAAlBC,eAAkBC,EACAC,mBAAS,cADTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC7BK,EAD6BH,EAAA,GACjBI,EADiBJ,EAAA,GAwBpC,SAASK,KAtBT,WACIC,QAAQC,IAAIV,GACZ,IAAK,IAAIW,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAIC,EAAMC,SAAUb,EAAeW,GAAM,KACrCE,SAASb,EAAeW,KAAO,IAC3BC,EAAM,KAAIA,EAAM,IACpBf,EAAWc,GACPG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,YAAA,GAAAC,OAAc,KAAOR,IAC5CG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,MAAO,CAAEC,OAAM,GAAAF,OAAKP,EAAL,KAAaU,WAAY,eAG5ET,SAASb,EAAeW,IAAM,KAC9BC,IAAQ,GACE,KAAIA,EAAM,IACpBf,EAAWc,GACPG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,YAAA,GAAAC,OAAc,KAAOR,IAC5CG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcG,MAAO,CAAEC,OAAM,GAAAF,OAAKP,EAAL,KAAaW,OAAM,GAAAJ,OAAK,GAAKP,EAAV,WAO/EY,GACkB,cAAdlB,GAA4C,YAAdA,EAKhB,SAAdA,GACAC,EAAc,YALdA,EAAc,SAStB,OACIO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeQ,QAAS,kBAAMjB,MAAhD,gBACAM,EAAAC,EAAAC,cAAA,OAAKC,UAAWX,GACXT,WCvCF6B,MAJf,WACI,OAAOC,KAAKC,SAASC,SAAS,IAAIC,UAAU,ICyDjCC,MAvDf,SAAAhC,GAAuD,IAA/BiC,EAA+BjC,EAA/BiC,IAAKC,EAA0BlC,EAA1BkC,SAAUC,EAAgBnC,EAAhBmC,aAAgBjC,EACrBC,mBAAS,IADYC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC5CkC,EAD4ChC,EAAA,GACnCiC,EADmCjC,EAAA,GAE/CkC,EAAS,GA6Cb,OA5CAC,oBAAU,YAOV,WACI,IADmB,IAAAC,EAAA,SACV5B,GAaD,IAAI6B,EAZC,GAAL7B,EACA0B,EAAO1B,GACHG,EAAAC,EAAAC,cAAA,MAAIyB,IAAKf,KACLZ,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,QAAUT,EAASU,SAAShC,GAAG,IAClDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,MAIrDsB,EAASU,SAAShC,GAAG,GAAK,IAAG6B,EAAc,SAC3CP,EAASU,SAAShC,GAAG,GAAK,IAAG6B,EAAc,OACf,IAA5BP,EAASU,SAAShC,GAAG,KAAU6B,EAAc,SAChDH,EAAO1B,GACHG,EAAAC,EAAAC,cAAA,MAAIyB,IAAKf,KACLZ,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,QAAUT,EAASU,SAAShC,GAAG,IAClDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAQT,EAASU,SAAShC,GAAG,IAChDG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,IAAKE,MAAK,GAAAzB,OAAIqB,KAAiBP,EAASU,SAAShC,GAAG,IACvEG,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEsB,KAAM,MAAO5B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAC5CQ,QAAS,kBAAMO,EAAIC,EAASU,SAAShC,GAAG,GAAGsB,EAASU,SAAShC,GAAG,GAAGsB,EAASU,SAAShC,GAAG,MAD9D,oBAzBjCA,EAAI,EAAGA,EAAIuB,EAAe,EAAGvB,IAAK4B,EAAlC5B,GAPTkC,GAwCAT,EAAWC,IAtCZ,CAACH,IA0CApB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACbH,EAAAC,EAAAC,cAAA,aACKmB,4xMC/CjB,IAAIW,EAAO,GACPC,EAAQ,GACRJ,EAAW,CAAC,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,SACjDT,EAAe,EACflC,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAiOrCgD,MA/Nf,WACI,IAAMC,EAAmBC,kBAAO,GADhB,SAAAC,IAAA,OAAAA,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,IAAAC,KAEhB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACsBC,MAAM,gCAD5B,cACUN,EADVG,EAAAI,KAAAJ,EAAAE,KAAA,EAEuBL,EAAIQ,OAF3B,OAEUP,EAFVE,EAAAI,KAGIpB,EAAWc,EAAKd,SAChB3C,EAAiByD,EAAKzD,eACtBkC,EAAeuB,EAAKvB,aACpB+B,EAAY,CAAEtB,aACdlC,QAAQC,IAAIwB,GAPhB,yBAAAyB,EAAAO,SAAAX,OAFgBY,MAAAC,KAAAC,WAAA,SAAAC,IAAA,OAAAA,EAAAlE,OAAAgD,EAAA,EAAAhD,CAAAiD,IAAAC,KAYhB,SAAAiB,IAAA,OAAAlB,IAAAK,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cACIpD,QAAQC,IAAI,cADhB8D,EAAAX,KAAA,EAEUC,MAAM,+BAAgC,CACxCW,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEnC,WAAUT,eAAalC,qBAPtD,wBAAAwE,EAAAN,SAAAK,OAZgBJ,MAAAC,KAAAC,WAuBhB/B,oBAAU,YAvBM,WAAAa,EAAAgB,MAAAC,KAAAC,WAwBZU,IACD,IAEHzC,oBAAU,WACDW,EAAiB+B,SA5BV,WAAAV,EAAAH,MAAAC,KAAAC,WA+BZY,CAAWtC,IACZ,CAACT,IAhCY,IAAAjC,EAkCgBC,mBAAS,CAAEyC,aAlC3BxC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAkCTgC,EAlCS9B,EAAA,GAkCC8D,EAlCD9D,EAAA,GAAA+E,EAqCkBhF,mBAAS,IArC3BiF,EAAA/E,OAAAC,EAAA,EAAAD,CAAA8E,EAAA,GAqCTE,EArCSD,EAAA,GAqCEE,EArCFF,EAAA,GAqDhB,SAASG,IACL,GAAY,IAARxC,GAAsB,GAARA,EAIlB,GAAa,IAATC,GAAwB,GAATA,EAKnB,GAAiB,IAAbqC,EAAJ,CAIA,IAAIG,EAASC,OAAOC,OAAO,gBAE3B,GAAc,IAAVF,GAIJ,GAAc,MAAVA,EAAJ,CAGA,IAAIG,EAAOF,OAAOC,OAAO,gBAEzB,GAAY,IAARC,GAIJ,GAAY,MAARA,EAAJ,CAGA,IAAIC,EAASJ,EAASG,EACtB,GAAIE,MAAMD,GACNE,MAAM,4CADV,CAIA7F,EAAe8C,EAAO,OAAS6C,EAC/B1C,EAAiB+B,SAAU,EAC3BrC,EAASmD,KAAK,CAAChD,EAAMC,EAAOqC,EAAWG,EAAQG,EAAMC,EAAQjE,MA6BjE,SAASqE,EAAYtC,EAAMuC,EAAMC,GAC7B,KAAID,GAAQC,GAAZ,CAMA,IAJA,IAAItF,EAAIqF,EACJE,EAAID,EACJxD,EAAMgB,EAAKuC,GAERrF,GAAKuF,GAAG,CACX,KAAOrF,SAAS4C,EAAKyC,GAAG,IAAMrF,SAAS4B,EAAI,KAAO9B,EAAIuF,GAClDA,GAAK,EACT,KAAOrF,SAAS4C,EAAK9C,GAAG,KAAOE,SAAS4B,EAAI,KAAO9B,EAAIuF,GACnDvF,GAAK,EACT,GAAIA,EAAIuF,EAAG,KAAAnG,EACc,CAAC0D,EAAKyC,GAAIzC,EAAK9C,IAAnC8C,EAAK9C,GADCZ,EAAA,GACG0D,EAAKyC,GADRnG,EAAA,IAKf0D,EAAKuC,GAAQvC,EAAK9C,GAClB8C,EAAK9C,GAAK8B,EACVsD,EAAYtC,EAAMuC,EAAMrF,EAAI,GAC5BoF,EAAYtC,EAAM9C,EAAI,EAAGsF,IA/CzBF,CAAYpD,EAAU,IADtBT,GAEA,IAAK,IAAIvB,EAAI,KAAMA,GAAK,KAAMA,IAAK,CAG/B,IAFA,IAAIwF,EAAQ,EACRC,EAAM,EACDC,EAAI,EAAGA,EAAInE,EAAe,EAAGmE,IAClC,GAAI1D,EAAS0D,GAAG,IAAM1F,EAAG,CACrBwF,EAAQE,EACR,MAGR,IAASA,EAAIF,EAAOE,EAAInE,EAAe,IAC/BS,EAAS0D,GAAG,IAAM1F,IAClByF,EAAMC,GACN1D,EAAS0D,GAAG,IAAM1F,GAHgB0F,KAM7B,GAATF,GAAqB,GAAPC,GACdE,EAAa3D,EAAUwD,EAAOC,GAItCnC,EAAY,CAAEtB,oBApCVkD,MAAM,wCATNA,MAAM,uCANNA,MAAM,uCALNA,MAAM,uCAJNA,MAAM,kCAyFd,SAASS,EAAa7C,EAAMuC,EAAMC,GAC9B,KAAID,GAAQC,GAAZ,CAMA,IAJA,IAAItF,EAAIqF,EACJE,EAAID,EACJxD,EAAMgB,EAAKuC,GAERrF,GAAKuF,GAAG,CACX,KAAOrF,SAAS4C,EAAKyC,GAAG,IAAMrF,SAAS4B,EAAI,KAAO9B,EAAIuF,GAClDA,GAAK,EAGT,KAAOrF,SAAS4C,EAAK9C,GAAG,KAAOE,SAAS4B,EAAI,KAAO9B,EAAIuF,GACnDvF,GAAK,EAGT,GAAIA,EAAIuF,EAAG,KAAAK,EACc,CAAC9C,EAAKyC,GAAIzC,EAAK9C,IAAnC8C,EAAK9C,GADC4F,EAAA,GACG9C,EAAKyC,GADRK,EAAA,IAKf9C,EAAKuC,GAAQvC,EAAK9C,GAClB8C,EAAK9C,GAAK8B,EACV6D,EAAa7C,EAAMuC,EAAMrF,EAAI,GAC7B2F,EAAa7C,EAAM9C,EAAI,EAAGsF,IAY9B,OACInF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBuF,SAAU,SAACC,GAAD,OAR5D,SAAoBA,GAChB3D,EAAO2D,EAAEC,OAAOC,MAO+CC,CAAWH,KAC1D3F,EAAAC,EAAAC,cAAA,UAAQ2F,MAAO,GAAf,kCACA7F,EAAAC,EAAAC,cAAA,sBAAqBF,EAAAC,EAAAC,cAAA,sBACrBF,EAAAC,EAAAC,cAAA,sBAAqBF,EAAAC,EAAAC,cAAA,sBACrBF,EAAAC,EAAAC,cAAA,sBAAqBF,EAAAC,EAAAC,cAAA,sBACrBF,EAAAC,EAAAC,cAAA,sBAAqBF,EAAAC,EAAAC,cAAA,sBACrBF,EAAAC,EAAAC,cAAA,sBAAqBF,EAAAC,EAAAC,cAAA,sBACrBF,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBuF,SAAU,SAACC,GAAD,OArB5D,SAAqBA,GACjB1D,EAAQ0D,EAAEC,OAAOC,MAoB8CE,CAAYJ,KAC3D3F,EAAAC,EAAAC,cAAA,UAAQ2F,MAAO,GAAf,kCACA7F,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYQ,QAAS,kBAAM6D,MAA7C,iBAEJxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgB6F,KAAK,OAClCC,QAAS,SAACN,GAAD,OA9K7B,SAAqBA,GACbA,EAAEC,OAAOC,MAAMK,QAAU,IACzB3B,EAAaoB,EAAEC,OAAOC,OA4KMM,CAAYR,IAAIE,MAAOvB,MAInDtE,EAAAC,EAAAC,cAACkG,EAAD,CAAclF,IA5KtB,SAAac,EAAM6C,EAAQwB,GACvBnH,EAAe8C,EAAO,OAAS6C,EAC/B1C,EAAiB+B,SAAU,EAC3BrC,EAAWA,EAASyE,OAAO,SAAAC,GAAI,OAAIA,EAAK,KAAOF,IAC/ClD,EAAY,CAAEtB,aACdT,KAuK4BD,SAAUA,EAAUC,aAAcA,IAC1DpB,EAAAC,EAAAC,cAACsG,EAAD,CAAYtH,eAAgBA,MC1NzBuH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAjB,EAAA,GAAAkB,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAA5H,GAAiD,IAA9C8H,EAA8C9H,EAA9C8H,OAAQC,EAAsC/H,EAAtC+H,OAAQC,EAA8BhI,EAA9BgI,OAAQC,EAAsBjI,EAAtBiI,OAAQC,EAAclI,EAAdkI,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxH,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,WAAP,KACEzH,EAAAC,EAAAC,cAACwH,EAAD,QAOJjB","file":"static/js/main.2a3dee36.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './BuildChart.css';\r\nvar profitData = []\r\nfunction BuildChart({ profitYearData }) {\r\n    const [chartState, setChartState] = useState(\"nonDisplay\")\r\n    function listDataToBar() {\r\n        console.log(profitYearData)\r\n        for (var i = 0; i <= 10; i++) {\r\n            let bar = parseInt((profitYearData[i]) / 4000)\r\n            if (parseInt(profitYearData[i]) >= 0) {\r\n                if (bar > 50) bar = 50\r\n                profitData[i] =\r\n                    <div className=\"result-bg\" data-year={`${2020 + i}`}>\r\n                        <div className=\"result-bar\" style={{ height: `${bar}%`, background: '#69f788' }}></div>\r\n                    </div>\r\n            }\r\n            if (parseInt(profitYearData[i]) < 0) {\r\n                bar *= -1\r\n                if (bar > 50) bar = 50\r\n                profitData[i] =\r\n                    <div className=\"result-bg\" data-year={`${2020 + i}`}>\r\n                        <div className=\"result-bar2\" style={{ height: `${bar}%`, bottom: `${50 - bar}%` }}></div>\r\n                    </div>\r\n            }\r\n        }\r\n    }\r\n\r\n    function chartBTN() {\r\n        listDataToBar()\r\n        if (chartState == \"nonDisplay\" || chartState == \"chartDel\") {\r\n            setChartState(\"chart\")\r\n            return\r\n        }\r\n\r\n        if (chartState == \"chart\") {\r\n            setChartState(\"chartDel\")\r\n            return\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <button className=\"openChartBTN\" onClick={() => chartBTN()}>圖表</button>\r\n            <div className={chartState}>\r\n                {profitData}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default BuildChart","function GenNonDuplicateID() {\r\n    return Math.random().toString(36).substring(2)\r\n}\r\n\r\nexport default GenNonDuplicateID","import React, {useState, useEffect } from 'react';\r\nimport './ListGenerate.css'\r\nimport GenNonDuplicateID from './GenNonDuplicateID'\r\nfunction ListGenerate({ del, listData, listItemsNum }) {\r\n    const [listAll, setListAll] = useState([])\r\n    var tdList = []    \r\n    useEffect(() => {\r\n        updateTable()\r\n        setTableLists()\r\n    }, [listItemsNum])\r\n\r\n\r\n\r\n    function updateTable() {\r\n        for (let i = 0; i < listItemsNum + 1; i++) {\r\n            if (i == 0)\r\n                tdList[i] =\r\n                    <tr key={GenNonDuplicateID()}>\r\n                        <td style={{ flex: '1.5' }}>{listData.itemData[i][0]}</td>\r\n                        <td style={{ flex: '1' }}>{listData.itemData[i][1]}</td>\r\n                        <td style={{ flex: '5' }}>{listData.itemData[i][2]}</td>\r\n                        <td style={{ flex: '3' }}>{listData.itemData[i][3]}</td>\r\n                        <td style={{ flex: '3' }}>{listData.itemData[i][4]}</td>\r\n                        <td style={{ flex: '3' }}>{listData.itemData[i][5]}</td>\r\n                        <td style={{ flex: '1' }}>{listData.itemData[i][6]}</td>\r\n                    </tr>\r\n            else{\r\n                let profitColor\r\n                if(listData.itemData[i][5] > 0) profitColor = \"green\"\r\n                if(listData.itemData[i][5] < 0) profitColor = \"red\"\r\n                if(listData.itemData[i][5] === 0) profitColor = \"black\"\r\n                tdList[i] =\r\n                    <tr key={GenNonDuplicateID()}>\r\n                        <td style={{ flex: '1.5' }}>{listData.itemData[i][0]}</td>\r\n                        <td style={{ flex: '1' }}>{listData.itemData[i][1]}</td>\r\n                        <td style={{ flex: '5' }}>{listData.itemData[i][2]}</td>\r\n                        <td style={{ flex: '3' }}>{listData.itemData[i][3]}</td>\r\n                        <td style={{ flex: '3' }}>{listData.itemData[i][4]}</td>\r\n                        <td style={{ flex: '3' ,color:`${profitColor}`}}>{listData.itemData[i][5]}</td>\r\n                        <td style={{ flex: '1' }}><button className='listDelBtn' \r\n                        onClick={() => del(listData.itemData[i][0],listData.itemData[i][5],listData.itemData[i][6])}>刪除</button></td>\r\n                    </tr>\r\n            }\r\n        }\r\n    }\r\n\r\n    function setTableLists() {\r\n        setListAll(tdList)\r\n    }\r\n\r\n    return (\r\n        <table className=\"tableList\">\r\n            <tbody>\r\n                {listAll}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\nexport default ListGenerate","import React, { useState, useEffect, useRef} from 'react';\r\nimport BuildChart from './BuildChart';\r\nimport ListGenerate from './ListGenerate';\r\nimport GenNonDuplicateID from './GenNonDuplicateID'\r\nimport './Addtable.css';\r\n\r\nvar year = \"\"\r\nvar month = \"\"\r\nvar itemData = [[\"年份\", \"月份\", \"品項\", \"收入\", \"成本\", \"獲利\", \"    \"]]\r\nvar listItemsNum = 0\r\nvar profitYearData = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\nfunction Addtable() {\r\n    const submittingStatus = useRef(false);\r\n    async function fetchData() {\r\n        const res = await fetch(\"http://localhost:3000/post/1\")\r\n        const data = await res.json()\r\n        itemData = data.itemData\r\n        profitYearData = data.profitYearData\r\n        listItemsNum = data.listItemsNum\r\n        setListData({ itemData })\r\n        console.log(listItemsNum)\r\n    }\r\n\r\n    async function uploadData() {\r\n        console.log(\"uploadData\")\r\n        await fetch(\"http://localhost:3000/post/1\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n              'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ itemData, listItemsNum,profitYearData})\r\n          })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!submittingStatus.current){\r\n            return\r\n        }\r\n        uploadData(itemData)\r\n    }, [listItemsNum])\r\n\r\n    const [listData, setListData] = useState({ itemData })\r\n    \r\n    \r\n    const [inputItem, setInputItem] = useState(\"\")\r\n\r\n    function handleInput(e) {\r\n        if (e.target.value.length <= 28) {\r\n            setInputItem(e.target.value)\r\n        }\r\n    }\r\n\r\n    function del(year, profit, id) {\r\n        profitYearData[year - 2020] -= profit\r\n        submittingStatus.current = true\r\n        itemData = itemData.filter(item => item[6] !== id)\r\n        setListData({ itemData })\r\n        listItemsNum--\r\n    }\r\n\r\n    function handleClick() {\r\n        if (year == \"\" || year == 0) {\r\n            alert(\"請輸入年份\")\r\n            return\r\n        }\r\n        if (month == \"\" || month == 0) {\r\n            alert(\"請輸入月份\")\r\n            return\r\n        }\r\n\r\n        if (inputItem == \"\") {\r\n            alert(\"請輸入品項\")\r\n            return\r\n        }\r\n        var income = window.prompt(\"收入\")\r\n\r\n        if (income == \"\") {\r\n            alert(\"請輸入收入\")\r\n            return\r\n        }\r\n        if (income == null) {\r\n            return\r\n        }\r\n        var cost = window.prompt(\"成本\")\r\n\r\n        if (cost == \"\") {\r\n            alert(\"請輸入成本\")\r\n            return\r\n        }\r\n        if (cost == null) {\r\n            return\r\n        }\r\n        var profit = income - cost\r\n        if (isNaN(profit)) {\r\n            alert(\"無法計算獲利\")\r\n            return\r\n        }\r\n        profitYearData[year - 2020] += profit\r\n        submittingStatus.current = true\r\n        itemData.push([year, month, inputItem, income, cost, profit, GenNonDuplicateID()])\r\n        listItemsNum++\r\n        sortForYear(itemData, 1, listItemsNum)\r\n        for (var i = 2020; i <= 2030; i++) {\r\n            let start = 0\r\n            let end = 0\r\n            for (var t = 1; t < listItemsNum + 1; t++) {\r\n                if (itemData[t][0] == i) {\r\n                    start = t\r\n                    break\r\n                }\r\n            }\r\n            for (var t = start; t < listItemsNum + 1; t++) {\r\n                if (itemData[t][0] == i)\r\n                    end = t\r\n                if (itemData[t][0] != i)\r\n                    break\r\n            }\r\n            if (start != 0 && end != 0) {\r\n                sortForMonth(itemData, start, end)\r\n            }\r\n\r\n        }\r\n        setListData({ itemData })\r\n        //console.log(listData)\r\n    }\r\n\r\n\r\n    //var test = [3,2,1,4,5,8,7,9]\r\n    function sortForYear(data, left, right) {\r\n        if (left >= right)         \r\n            return\r\n        let i = left                     \r\n        let j = right                     \r\n        let key = data[left]               \r\n\r\n        while (i != j) {\r\n            while (parseInt(data[j][0]) < parseInt(key[0]) && i < j)\r\n                j -= 1    \r\n            while (parseInt(data[i][0]) >= parseInt(key[0]) && i < j)\r\n                i += 1\r\n            if (i < j) {\r\n                [data[i], data[j]] = [data[j], data[i]];\r\n            }\r\n        }\r\n       \r\n        data[left] = data[i]\r\n        data[i] = key\r\n        sortForYear(data, left, i - 1)\r\n        sortForYear(data, i + 1, right)\r\n    }\r\n\r\n    function sortForMonth(data, left, right) {\r\n        if (left >= right)        \r\n            return\r\n        let i = left                 \r\n        let j = right                   \r\n        let key = data[left]             \r\n\r\n        while (i != j) {\r\n            while (parseInt(data[j][1]) < parseInt(key[1]) && i < j) {\r\n                j -= 1\r\n            }  \r\n\r\n            while (parseInt(data[i][1]) >= parseInt(key[1]) && i < j) {\r\n                i += 1\r\n            }  \r\n\r\n            if (i < j) {\r\n                [data[i], data[j]] = [data[j], data[i]];\r\n            }\r\n        }\r\n      \r\n        data[left] = data[i]\r\n        data[i] = key\r\n        sortForMonth(data, left, i - 1)   \r\n        sortForMonth(data, i + 1, right) \r\n    }\r\n\r\n\r\n    function selectMonth(e) {\r\n        month = e.target.value\r\n    }\r\n\r\n    function selectYear(e) {\r\n        year = e.target.value\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"addTable\" >\r\n                <div className=\"inputData\">\r\n                    <select className=\"selectYearMon\" onChange={(e) => selectYear(e)}>\r\n                        <option value={0}>請選擇年份</option>\r\n                        <option>2020</option><option>2021</option>\r\n                        <option>2022</option><option>2023</option>\r\n                        <option>2024</option><option>2025</option>\r\n                        <option>2026</option><option>2027</option>\r\n                        <option>2028</option><option>2029</option>\r\n                        <option>2030</option>\r\n                    </select>\r\n                    <select className=\"selectYearMon\" onChange={(e) => selectMonth(e)}>\r\n                        <option value={0}>請選擇月份</option>\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                        <option>4</option>\r\n                        <option>5</option>\r\n                        <option>6</option>\r\n                        <option>7</option>\r\n                        <option>8</option>\r\n                        <option>9</option>\r\n                        <option>10</option>\r\n                        <option>11</option>\r\n                        <option>12</option>\r\n                    </select>\r\n                    <button className=\"summitBTN\" onClick={() => handleClick()}>新增</button>\r\n                </div>\r\n                <div className=\"inputData\">\r\n                    <p>品項</p>\r\n                    <input className=\"inputItemName\" type=\"text\"\r\n                        onInput={(e) => handleInput(e)} value={inputItem} />\r\n                </div>\r\n\r\n            </div>\r\n            <ListGenerate del={del} listData={listData} listItemsNum={listItemsNum}></ListGenerate>\r\n            <BuildChart profitYearData={profitYearData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Addtable;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Addtable from './Addtable';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Addtable />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}